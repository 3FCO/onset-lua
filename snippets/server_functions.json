{
    "Server.RGBA": {
        "prefix": "RGBA",
        "body": "RGBA( ${1:r}, ${2:g}, ${3:b}, ${4:a} )$0\r\n",
        "description": "(Server) Function: RGBA(r,g,b,a)"
    },
    "Server.RGB": {
        "prefix": "RGB",
        "body": "RGB( ${1:r}, ${2:g}, ${3:b }, ${4:a (optional)} )$0\r\n",
        "description": "(Server) Function: RGB(r,g,b ,a (optional))"
    },
    "Server.HexToRGBA": {
        "prefix": "HexToRGBA",
        "body": "HexToRGBA( ${1:HexColor} )$0\r\n",
        "description": "(Server) Function: HexToRGBA(HexColor)"
    },
    "Server.HexToRGBAFloat": {
        "prefix": "HexToRGBAFloat",
        "body": "HexToRGBAFloat(${1:HexColor})$0\r\n",
        "description": "(Server) Function: HexToRGBAFloat(HexColor)"
    },
    "Server.Random": {
        "prefix": "Random",
        "body": "Random( ${1:Min (optional)}, ${2:Max (optional)} )$0\r\n",
        "description": "(Server) Function: Random(Min (optional),Max (optional))"
    },
    "Server.RandomFloat": {
        "prefix": "RandomFloat",
        "body": "RandomFloat( ${1:Min (optional)}, ${2:Max (optional)} )$0\r\n",
        "description": "(Server) Function: RandomFloat(Min (optional),Max (optional))"
    },
    "Server.Base64Encode": {
        "prefix": "Base64Encode",
        "body": "Base64Encode( ${1:text} )$0\r\n",
        "description": "(Server) Function: Base64Encode(text)"
    },
    "Server.Base64Decode": {
        "prefix": "Base64Decode",
        "body": "Base64Decode( ${1:base64} )$0\r\n",
        "description": "(Server) Function: Base64Decode(base64)"
    },
    "Server.GetTimeSeconds": {
        "prefix": "GetTimeSeconds",
        "body": "GetTimeSeconds()$0\r\n",
        "description": "(Server) Function: GetTimeSeconds()"
    },
    "Server.GetDeltaSeconds": {
        "prefix": "GetDeltaSeconds",
        "body": "GetDeltaSeconds()$0\r\n",
        "description": "(Server) Function: GetDeltaSeconds()"
    },
    "Server.GetTickCount": {
        "prefix": "GetTickCount",
        "body": "GetTickCount()$0\r\n",
        "description": "(Server) Function: GetTickCount()"
    },
    "Server.GetGameVersion": {
        "prefix": "GetGameVersion",
        "body": "GetGameVersion()$0\r\n",
        "description": "(Server) Function: GetGameVersion()"
    },
    "Server.GetGameVersionString": {
        "prefix": "GetGameVersionString",
        "body": "GetGameVersionString()$0\r\n",
        "description": "(Server) Function: GetGameVersionString()"
    },
    "Server.GetServerTickRate": {
        "prefix": "GetServerTickRate",
        "body": "GetServerTickRate()$0\r\n",
        "description": "(Server) Function: GetServerTickRate()"
    },
    "Server.ServerExit": {
        "prefix": "ServerExit",
        "body": "ServerExit( ${1:ExitMessage (optional)} )$0\r\n",
        "description": "(Server) Function: ServerExit(ExitMessage (optional))"
    },
    "Server.SetServerName": {
        "prefix": "SetServerName",
        "body": "SetServerName( ${1:ServerName} )$0\r\n",
        "description": "(Server) Function: SetServerName(ServerName)"
    },
    "Server.GetServerName": {
        "prefix": "GetServerName",
        "body": "GetServerName()$0\r\n",
        "description": "(Server) Function: GetServerName()"
    },
    "Server.GetMaxPlayers": {
        "prefix": "GetMaxPlayers",
        "body": "GetMaxPlayers()$0\r\n",
        "description": "(Server) Function: GetMaxPlayers()"
    },
    "Server.GetDistance2D": {
        "prefix": "GetDistance2D",
        "body": "GetDistance2D( ${1:x}, ${2:y}, ${3:x2}, ${4:y2} )$0\r\n",
        "description": "(Server) Function: GetDistance2D(x,y,x2,y2)"
    },
    "Server.GetDistance3D": {
        "prefix": "GetDistance3D",
        "body": "GetDistance3D( ${1:x}, ${2:y}, ${3:z}, ${4:x2}, ${5:y2}, ${6:z2} )$0\r\n",
        "description": "(Server) Function: GetDistance3D(x,y,z,x2,y2,z2)"
    },
    "Server.CreateExplosion": {
        "prefix": "CreateExplosion",
        "body": "CreateExplosion( ${1:explosionid}, ${2:x}, ${3:y}, ${4:z }, ${5:dimension }, ${6:soundExplosion}, ${7:camShakeRadius}, ${8:radialForce (optional)} )$0\r\n",
        "description": "(Server) Function: CreateExplosion(explosionid,x,y,z ,dimension ,soundExplosion,camShakeRadius,radialForce (optional))"
    },
    "Server.IsValidDoor": {
        "prefix": "IsValidDoor",
        "body": "IsValidDoor( ${1:door} )$0\r\n",
        "description": "(Server) Function: IsValidDoor(door)"
    },
    "Server.CreateDoor": {
        "prefix": "CreateDoor",
        "body": "CreateDoor( ${1:modelid}, ${2:x}, ${3:y}, ${4:z}, ${5:rotation}, ${6:bEnableInteract (optional)} )$0\r\n",
        "description": "(Server) Function: CreateDoor(modelid,x,y,z,rotation,bEnableInteract (optional))"
    },
    "Server.DestroyDoor": {
        "prefix": "DestroyDoor",
        "body": "DestroyDoor( ${1:door} )$0\r\n",
        "description": "(Server) Function: DestroyDoor(door)"
    },
    "Server.SetDoorOpen": {
        "prefix": "SetDoorOpen",
        "body": "SetDoorOpen( ${1:door}, ${2:bOpen} )$0\r\n",
        "description": "(Server) Function: SetDoorOpen(door,bOpen)"
    },
    "Server.IsDoorOpen": {
        "prefix": "IsDoorOpen",
        "body": "IsDoorOpen( ${1:door} )$0\r\n",
        "description": "(Server) Function: IsDoorOpen(door)"
    },
    "Server.GetAllDoors": {
        "prefix": "GetAllDoors",
        "body": "GetAllDoors()$0\r\n",
        "description": "(Server) Function: GetAllDoors()"
    },
    "Server.GetDoorCount": {
        "prefix": "GetDoorCount",
        "body": "GetDoorCount()$0\r\n",
        "description": "(Server) Function: GetDoorCount()"
    },
    "Server.GetDoorModel": {
        "prefix": "GetDoorModel",
        "body": "GetDoorModel( ${1:door} )$0\r\n",
        "description": "(Server) Function: GetDoorModel(door)"
    },
    "Server.SetDoorLocation": {
        "prefix": "SetDoorLocation",
        "body": "SetDoorLocation( ${1:door}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetDoorLocation(door,x,y,z)"
    },
    "Server.GetDoorLocation": {
        "prefix": "GetDoorLocation",
        "body": "GetDoorLocation( ${1:door} )$0\r\n",
        "description": "(Server) Function: GetDoorLocation(door)"
    },
    "Server.SetDoorDimension": {
        "prefix": "SetDoorDimension",
        "body": "SetDoorDimension( ${1:vehicle}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetDoorDimension(vehicle,dimension)"
    },
    "Server.GetDoorDimension": {
        "prefix": "GetDoorDimension",
        "body": "GetDoorDimension( ${1:door} )$0\r\n",
        "description": "(Server) Function: GetDoorDimension(door)"
    },
    "Server.GetNetworkStats": {
        "prefix": "GetNetworkStats",
        "body": "GetNetworkStats()$0\r\n",
        "description": "(Server) Function: GetNetworkStats()"
    },
    "Server.DumpNetworkStats": {
        "prefix": "DumpNetworkStats",
        "body": "DumpNetworkStats( ${1:verbosity} )$0\r\n",
        "description": "(Server) Function: DumpNetworkStats(verbosity)"
    },
    "Server.CreateNPC": {
        "prefix": "CreateNPC",
        "body": "CreateNPC( ${1:x}, ${2:y}, ${3:z}, ${4:h} )$0\r\n",
        "description": "(Server) Function: CreateNPC(x,y,z,h)"
    },
    "Server.DestroyNPC": {
        "prefix": "DestroyNPC",
        "body": "DestroyNPC( ${1:npc} )$0\r\n",
        "description": "(Server) Function: DestroyNPC(npc)"
    },
    "Server.IsValidNPC": {
        "prefix": "IsValidNPC",
        "body": "IsValidNPC( ${1:npc} )$0\r\n",
        "description": "(Server) Function: IsValidNPC(npc)"
    },
    "Server.GetAllNPC": {
        "prefix": "GetAllNPC",
        "body": "GetAllNPC()$0\r\n",
        "description": "(Server) Function: GetAllNPC()"
    },
    "Server.GetNPCCount": {
        "prefix": "GetNPCCount",
        "body": "GetNPCCount()$0\r\n",
        "description": "(Server) Function: GetNPCCount()"
    },
    "Server.IsNPCStreamedIn": {
        "prefix": "IsNPCStreamedIn",
        "body": "IsNPCStreamedIn( ${1:player}, ${2:npc} )$0\r\n",
        "description": "(Server) Function: IsNPCStreamedIn(player,npc)"
    },
    "Server.GetNPCModel": {
        "prefix": "GetNPCModel",
        "body": "GetNPCModel( ${1:npc} )$0\r\n",
        "description": "(Server) Function: GetNPCModel(npc)"
    },
    "Server.SetNPCLocation": {
        "prefix": "SetNPCLocation",
        "body": "SetNPCLocation( ${1:npc}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetNPCLocation(npc,x,y,z)"
    },
    "Server.GetNPCLocation": {
        "prefix": "GetNPCLocation",
        "body": "GetNPCLocation( ${1:npc} )$0\r\n",
        "description": "(Server) Function: GetNPCLocation(npc)"
    },
    "Server.SetNPCHealth": {
        "prefix": "SetNPCHealth",
        "body": "SetNPCHealth( ${1:npc}, ${2:health} )$0\r\n",
        "description": "(Server) Function: SetNPCHealth(npc,health)"
    },
    "Server.GetNPCHealth": {
        "prefix": "GetNPCHealth",
        "body": "GetNPCHealth( ${1:npc} )$0\r\n",
        "description": "(Server) Function: GetNPCHealth(npc)"
    },
    "Server.SetNPCAnimation": {
        "prefix": "SetNPCAnimation",
        "body": "SetNPCAnimation( ${1:npc}, ${2:animation}, ${3:loop} )$0\r\n",
        "description": "(Server) Function: SetNPCAnimation(npc,animation,loop)"
    },
    "Server.SetNPCHeading": {
        "prefix": "SetNPCHeading",
        "body": "SetNPCHeading( ${1:npc}, ${2:heading} )$0\r\n",
        "description": "(Server) Function: SetNPCHeading(npc,heading)"
    },
    "Server.GetNPCHeading": {
        "prefix": "GetNPCHeading",
        "body": "GetNPCHeading( ${1:npc} )$0\r\n",
        "description": "(Server) Function: GetNPCHeading(npc)"
    },
    "Server.SetNPCTargetLocation": {
        "prefix": "SetNPCTargetLocation",
        "body": "SetNPCTargetLocation( ${1:npc}, ${2:x}, ${3:y}, ${4:z }, ${5:speed (optional)} )$0\r\n",
        "description": "(Server) Function: SetNPCTargetLocation(npc,x,y,z ,speed (optional))"
    },
    "Server.SetNPCFollowPlayer": {
        "prefix": "SetNPCFollowPlayer",
        "body": "SetNPCFollowPlayer( ${1:npc}, ${2:player }, ${3:speed (optional)} )$0\r\n",
        "description": "(Server) Function: SetNPCFollowPlayer(npc,player ,speed (optional))"
    },
    "Server.SetNPCFollowVehicle": {
        "prefix": "SetNPCFollowVehicle",
        "body": "SetNPCFollowVehicle( ${1:npc}, ${2:vehicle }, ${3:speed (optional)} )$0\r\n",
        "description": "(Server) Function: SetNPCFollowVehicle(npc,vehicle ,speed (optional))"
    },
    "Server.CreateObject": {
        "prefix": "CreateObject",
        "body": "CreateObject( ${1:modelid}, ${2:x}, ${3:y}, ${4:z}, ${5:rx (optional)}, ${6:ry (optional)}, ${7:rz (optional)}, ${8:sx (optional)}, ${9:sy (optional)}, ${10:sz (optional)} )$0\r\n",
        "description": "(Server) Function: CreateObject(modelid,x,y,z,rx (optional),ry (optional),rz (optional),sx (optional),sy (optional),sz (optional))"
    },
    "Server.DestroyObject": {
        "prefix": "DestroyObject",
        "body": "DestroyObject( ${1:object} )$0\r\n",
        "description": "(Server) Function: DestroyObject(object)"
    },
    "Server.IsValidObject": {
        "prefix": "IsValidObject",
        "body": "IsValidObject( ${1:object} )$0\r\n",
        "description": "(Server) Function: IsValidObject(object)"
    },
    "Server.GetObjectCount": {
        "prefix": "GetObjectCount",
        "body": "GetObjectCount()$0\r\n",
        "description": "(Server) Function: GetObjectCount()"
    },
    "Server.GetObjectModel": {
        "prefix": "GetObjectModel",
        "body": "GetObjectModel( ${1:object} )$0\r\n",
        "description": "(Server) Function: GetObjectModel(object)"
    },
    "Server.IsObjectStreamedIn": {
        "prefix": "IsObjectStreamedIn",
        "body": "IsObjectStreamedIn( ${1:player}, ${2:object} )$0\r\n",
        "description": "(Server) Function: IsObjectStreamedIn(player,object)"
    },
    "Server.SetObjectStreamDistance": {
        "prefix": "SetObjectStreamDistance",
        "body": "SetObjectStreamDistance( ${1:object}, ${2:distance} )$0\r\n",
        "description": "(Server) Function: SetObjectStreamDistance(object,distance)"
    },
    "Server.SetObjectLocation": {
        "prefix": "SetObjectLocation",
        "body": "SetObjectLocation( ${1:object}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetObjectLocation(object,x,y,z)"
    },
    "Server.GetObjectLocation": {
        "prefix": "GetObjectLocation",
        "body": "GetObjectLocation( ${1:object} )$0\r\n",
        "description": "(Server) Function: GetObjectLocation(object)"
    },
    "Server.SetObjectRotation": {
        "prefix": "SetObjectRotation",
        "body": "SetObjectRotation( ${1:object}, ${2:rx}, ${3:ry}, ${4:rz} )$0\r\n",
        "description": "(Server) Function: SetObjectRotation(object,rx,ry,rz)"
    },
    "Server.GetObjectRotation": {
        "prefix": "GetObjectRotation",
        "body": "GetObjectRotation( ${1:object} )$0\r\n",
        "description": "(Server) Function: GetObjectRotation(object)"
    },
    "Server.SetObjectScale": {
        "prefix": "SetObjectScale",
        "body": "SetObjectScale( ${1:object}, ${2:sx}, ${3:sy}, ${4:sz} )$0\r\n",
        "description": "(Server) Function: SetObjectScale(object,sx,sy,sz)"
    },
    "Server.GetObjectScale": {
        "prefix": "GetObjectScale",
        "body": "GetObjectScale( ${1:object} )$0\r\n",
        "description": "(Server) Function: GetObjectScale(object)"
    },
    "Server.SetObjectAttached": {
        "prefix": "SetObjectAttached",
        "body": "SetObjectAttached( ${1:object}, ${2:attachtype}, ${3:attachid}, ${4:x}, ${5:y}, ${6:z}, ${7:rx (optional)}, ${8:ry (optional)}, ${9:rz (optional)}, ${10:SocketName (optional)} )$0\r\n",
        "description": "(Server) Function: SetObjectAttached(object,attachtype,attachid,x,y,z,rx (optional),ry (optional),rz (optional),SocketName (optional))"
    },
    "Server.SetObjectDetached": {
        "prefix": "SetObjectDetached",
        "body": "SetObjectDetached( ${1:object} )$0\r\n",
        "description": "(Server) Function: SetObjectDetached(object)"
    },
    "Server.IsObjectAttached": {
        "prefix": "IsObjectAttached",
        "body": "IsObjectAttached( ${1:object} )$0\r\n",
        "description": "(Server) Function: IsObjectAttached(object)"
    },
    "Server.GetObjectAttachmentInfo": {
        "prefix": "GetObjectAttachmentInfo",
        "body": "GetObjectAttachmentInfo( ${1:object} )$0\r\n",
        "description": "(Server) Function: GetObjectAttachmentInfo(object)"
    },
    "Server.IsObjectMoving": {
        "prefix": "IsObjectMoving",
        "body": "IsObjectMoving( ${1:object} )$0\r\n",
        "description": "(Server) Function: IsObjectMoving(object)"
    },
    "Server.SetObjectMoveTo": {
        "prefix": "SetObjectMoveTo",
        "body": "SetObjectMoveTo( ${1:object}, ${2:x}, ${3:y}, ${4:z }, ${5:speed (optional)} )$0\r\n",
        "description": "(Server) Function: SetObjectMoveTo(object,x,y,z ,speed (optional))"
    },
    "Server.StopObjectMove": {
        "prefix": "StopObjectMove",
        "body": "StopObjectMove( ${1:object} )$0\r\n",
        "description": "(Server) Function: StopObjectMove(object)"
    },
    "Server.SetObjectRotateAxis": {
        "prefix": "SetObjectRotateAxis",
        "body": "SetObjectRotateAxis( ${1:object}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetObjectRotateAxis(object,x,y,z)"
    },
    "Server.ImportPackage": {
        "prefix": "ImportPackage",
        "body": "ImportPackage( ${1:PackageName} )$0\r\n",
        "description": "(Server) Function: ImportPackage(PackageName)"
    },
    "Server.AddFunctionExport": {
        "prefix": "AddFunctionExport",
        "body": "AddFunctionExport( ${1:ExportName}, ${2:ExportFunction} )$0\r\n",
        "description": "(Server) Function: AddFunctionExport(ExportName,ExportFunction)"
    },
    "Server.AddEvent": {
        "prefix": "AddEvent",
        "body": "AddEvent( ${1:EventName}, ${2:LuaFunction } )$0\r\n",
        "description": "(Server) Function: AddEvent(EventName,LuaFunction )"
    },
    "Server.CallEvent": {
        "prefix": "CallEvent",
        "body": "CallEvent( ${1:EventName }, ${2:UserArgs (optional)} )$0\r\n",
        "description": "(Server) Function: CallEvent(EventName ,UserArgs (optional))"
    },
    "Server.AddRemoteEvent": {
        "prefix": "AddRemoteEvent",
        "body": "AddRemoteEvent( ${1:player}, ${2:RemoteEventName}, ${3:LuaFunction} )$0\r\n",
        "description": "(Server) Function: AddRemoteEvent(player,RemoteEventName,LuaFunction)"
    },
    "Server.AddCommand": {
        "prefix": "AddCommand",
        "body": "AddCommand( ${1:CommandName}, ${2:LuaFunction} )$0\r\n",
        "description": "(Server) Function: AddCommand(CommandName,LuaFunction)"
    },
    "Server.StartPackage": {
        "prefix": "StartPackage",
        "body": "StartPackage( ${1:PackageName} )$0\r\n",
        "description": "(Server) Function: StartPackage(PackageName)"
    },
    "Server.StopPackage": {
        "prefix": "StopPackage",
        "body": "StopPackage( ${1:PackageName} )$0\r\n",
        "description": "(Server) Function: StopPackage(PackageName)"
    },
    "Server.GetAllPackages": {
        "prefix": "GetAllPackages",
        "body": "GetAllPackages()$0\r\n",
        "description": "(Server) Function: GetAllPackages()"
    },
    "Server.GetPackageName": {
        "prefix": "GetPackageName",
        "body": "GetPackageName()$0\r\n",
        "description": "(Server) Function: GetPackageName()"
    },
    "Server.IsPackageStarted": {
        "prefix": "IsPackageStarted",
        "body": "IsPackageStarted( ${1:PackageName} )$0\r\n",
        "description": "(Server) Function: IsPackageStarted(PackageName)"
    },
    "Server.SetPickupVisibleForPlayers": {
        "prefix": "SetPickupVisibleForPlayers",
        "body": "SetPickupVisibleForPlayers( ${1:Pickup}, ${2:Players} )$0\r\n",
        "description": "(Server) Function: SetPickupVisibleForPlayers(Pickup,Players)"
    },
    "Server.GetPickupCount": {
        "prefix": "GetPickupCount",
        "body": "GetPickupCount()$0\r\n",
        "description": "(Server) Function: GetPickupCount()"
    },
    "Server.GetAllPickups": {
        "prefix": "GetAllPickups",
        "body": "GetAllPickups()$0\r\n",
        "description": "(Server) Function: GetAllPickups()"
    },
    "Server.CreatePickup": {
        "prefix": "CreatePickup",
        "body": "CreatePickup( ${1:modelid}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: CreatePickup(modelid,x,y,z)"
    },
    "Server.DestroyPickup": {
        "prefix": "DestroyPickup",
        "body": "DestroyPickup( ${1:pickup} )$0\r\n",
        "description": "(Server) Function: DestroyPickup(pickup)"
    },
    "Server.IsValidPickup": {
        "prefix": "IsValidPickup",
        "body": "IsValidPickup( ${1:pickup} )$0\r\n",
        "description": "(Server) Function: IsValidPickup(pickup)"
    },
    "Server.SetPickupScale": {
        "prefix": "SetPickupScale",
        "body": "SetPickupScale( ${1:pickup}, ${2:sx}, ${3:sy}, ${4:sz} )$0\r\n",
        "description": "(Server) Function: SetPickupScale(pickup,sx,sy,sz)"
    },
    "Server.GetPickupScale": {
        "prefix": "GetPickupScale",
        "body": "GetPickupScale( ${1:pickup} )$0\r\n",
        "description": "(Server) Function: GetPickupScale(pickup)"
    },
    "Server.IsValidPlayer": {
        "prefix": "IsValidPlayer",
        "body": "IsValidPlayer( ${1:player} )$0\r\n",
        "description": "(Server) Function: IsValidPlayer(player)"
    },
    "Server.CallRemoteEvent": {
        "prefix": "CallRemoteEvent",
        "body": "CallRemoteEvent( ${1:player}, ${2:EventName}, ${3:UserArgs (optional)} )$0\r\n",
        "description": "(Server) Function: CallRemoteEvent(player,EventName,UserArgs (optional))"
    },
    "Server.GetPlayerCount": {
        "prefix": "GetPlayerCount",
        "body": "GetPlayerCount()$0\r\n",
        "description": "(Server) Function: GetPlayerCount()"
    },
    "Server.GetAllPlayers": {
        "prefix": "GetAllPlayers",
        "body": "GetAllPlayers()$0\r\n",
        "description": "(Server) Function: GetAllPlayers()"
    },
    "Server.GetNearestPlayer2D": {
        "prefix": "GetNearestPlayer2D",
        "body": "GetNearestPlayer2D( ${1:x}, ${2:y} )$0\r\n",
        "description": "(Server) Function: GetNearestPlayer2D(x,y)"
    },
    "Server.GetPlayersInRange2D": {
        "prefix": "GetPlayersInRange2D",
        "body": "GetPlayersInRange2D( ${1:x}, ${2:y}, ${3:range} )$0\r\n",
        "description": "(Server) Function: GetPlayersInRange2D(x,y,range)"
    },
    "Server.GetPlayersInRange3D": {
        "prefix": "GetPlayersInRange3D",
        "body": "GetPlayersInRange3D( ${1:x}, ${2:y}, ${3:z}, ${4:range} )$0\r\n",
        "description": "(Server) Function: GetPlayersInRange3D(x,y,z,range)"
    },
    "Server.GetStreamedPlayersForPlayer": {
        "prefix": "GetStreamedPlayersForPlayer",
        "body": "GetStreamedPlayersForPlayer( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetStreamedPlayersForPlayer(player)"
    },
    "Server.SetPlayerName": {
        "prefix": "SetPlayerName",
        "body": "SetPlayerName( ${1:player}, ${2:name} )$0\r\n",
        "description": "(Server) Function: SetPlayerName(player,name)"
    },
    "Server.GetPlayerName": {
        "prefix": "GetPlayerName",
        "body": "GetPlayerName( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerName(player)"
    },
    "Server.GetPlayerSteamId": {
        "prefix": "GetPlayerSteamId",
        "body": "GetPlayerSteamId( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerSteamId(player)"
    },
    "Server.GetPlayerNetworkStats": {
        "prefix": "GetPlayerNetworkStats",
        "body": "GetPlayerNetworkStats( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerNetworkStats(player)"
    },
    "Server.SetPlayerSpawnLocation": {
        "prefix": "SetPlayerSpawnLocation",
        "body": "SetPlayerSpawnLocation( ${1:player}, ${2:x}, ${3:y}, ${4:z}, ${5:h} )$0\r\n",
        "description": "(Server) Function: SetPlayerSpawnLocation(player,x,y,z,h)"
    },
    "Server.IsPlayerStreamedIn": {
        "prefix": "IsPlayerStreamedIn",
        "body": "IsPlayerStreamedIn( ${1:player}, ${2:otherid} )$0\r\n",
        "description": "(Server) Function: IsPlayerStreamedIn(player,otherid)"
    },
    "Server.SetPlayerVoiceEnabled": {
        "prefix": "SetPlayerVoiceEnabled",
        "body": "SetPlayerVoiceEnabled( ${1:player}, ${2:enable} )$0\r\n",
        "description": "(Server) Function: SetPlayerVoiceEnabled(player,enable)"
    },
    "Server.IsPlayerVoiceEnabled": {
        "prefix": "IsPlayerVoiceEnabled",
        "body": "IsPlayerVoiceEnabled( ${1:player} )$0\r\n",
        "description": "(Server) Function: IsPlayerVoiceEnabled(player)"
    },
    "Server.IsPlayerTalking": {
        "prefix": "IsPlayerTalking",
        "body": "IsPlayerTalking( ${1:player} )$0\r\n",
        "description": "(Server) Function: IsPlayerTalking(player)"
    },
    "Server.AddPlayerChat": {
        "prefix": "AddPlayerChat",
        "body": "AddPlayerChat( ${1:player}, ${2:message} )$0\r\n",
        "description": "(Server) Function: AddPlayerChat(player,message)"
    },
    "Server.AddPlayerChatRange": {
        "prefix": "AddPlayerChatRange",
        "body": "AddPlayerChatRange( ${1:x}, ${2:y}, ${3:range}, ${4:message} )$0\r\n",
        "description": "(Server) Function: AddPlayerChatRange(x,y,range,message)"
    },
    "Server.AddPlayerChatAll": {
        "prefix": "AddPlayerChatAll",
        "body": "AddPlayerChatAll( ${1:message} )$0\r\n",
        "description": "(Server) Function: AddPlayerChatAll(message)"
    },
    "Server.GetPlayerState": {
        "prefix": "GetPlayerState",
        "body": "GetPlayerState( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerState(player)"
    },
    "Server.GetPlayerMovementMode": {
        "prefix": "GetPlayerMovementMode",
        "body": "GetPlayerMovementMode( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerMovementMode(player)"
    },
    "Server.GetPlayerMovementSpeed": {
        "prefix": "GetPlayerMovementSpeed",
        "body": "GetPlayerMovementSpeed( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerMovementSpeed(player)"
    },
    "Server.IsPlayerAiming": {
        "prefix": "IsPlayerAiming",
        "body": "IsPlayerAiming( ${1:player} )$0\r\n",
        "description": "(Server) Function: IsPlayerAiming(player)"
    },
    "Server.IsPlayerReloading": {
        "prefix": "IsPlayerReloading",
        "body": "IsPlayerReloading( ${1:player} )$0\r\n",
        "description": "(Server) Function: IsPlayerReloading(player)"
    },
    "Server.GetVehicleLicensePlate": {
        "prefix": "GetVehicleLicensePlate",
        "body": "GetVehicleLicensePlate( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleLicensePlate(vehicle)"
    },
    "Server.GetPlayerVehicle": {
        "prefix": "GetPlayerVehicle",
        "body": "GetPlayerVehicle( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerVehicle(player)"
    },
    "Server.GetPlayerVehicleSeat": {
        "prefix": "GetPlayerVehicleSeat",
        "body": "GetPlayerVehicleSeat( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerVehicleSeat(player)"
    },
    "Server.SetPlayerInVehicle": {
        "prefix": "SetPlayerInVehicle",
        "body": "SetPlayerInVehicle( ${1:player}, ${2:vehicle }, ${3:seat (optional)} )$0\r\n",
        "description": "(Server) Function: SetPlayerInVehicle(player,vehicle ,seat (optional))"
    },
    "Server.RemovePlayerFromVehicle": {
        "prefix": "RemovePlayerFromVehicle",
        "body": "RemovePlayerFromVehicle( ${1:player} )$0\r\n",
        "description": "(Server) Function: RemovePlayerFromVehicle(player)"
    },
    "Server.SetPlayerLocation": {
        "prefix": "SetPlayerLocation",
        "body": "SetPlayerLocation( ${1:player}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetPlayerLocation(player,x,y,z)"
    },
    "Server.GetPlayerLocation": {
        "prefix": "GetPlayerLocation",
        "body": "GetPlayerLocation( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerLocation(player)"
    },
    "Server.SetPlayerWeaponStat": {
        "prefix": "SetPlayerWeaponStat",
        "body": "SetPlayerWeaponStat( ${1:player}, ${2:weaponid}, ${3:stat}, ${4:value} )$0\r\n",
        "description": "(Server) Function: SetPlayerWeaponStat(player,weaponid,stat,value)"
    },
    "Server.SetPlayerWeapon": {
        "prefix": "SetPlayerWeapon",
        "body": "SetPlayerWeapon( ${1:player}, ${2:weapon_model}, ${3:ammo}, ${4:equip}, ${5:weapon_slot}, ${6:bLoaded} )$0\r\n",
        "description": "(Server) Function: SetPlayerWeapon(player,weapon_model,ammo,equip,weapon_slot,bLoaded)"
    },
    "Server.GetPlayerWeapon": {
        "prefix": "GetPlayerWeapon",
        "body": "GetPlayerWeapon( ${1:player}, ${2:weaponslot (optional)} )$0\r\n",
        "description": "(Server) Function: GetPlayerWeapon(player,weaponslot (optional))"
    },
    "Server.GetPlayerEquippedWeaponSlot": {
        "prefix": "GetPlayerEquippedWeaponSlot",
        "body": "GetPlayerEquippedWeaponSlot( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerEquippedWeaponSlot(player)"
    },
    "Server.EquipPlayerWeaponSlot": {
        "prefix": "EquipPlayerWeaponSlot",
        "body": "EquipPlayerWeaponSlot( ${1:player}, ${2:weaponslot} )$0\r\n",
        "description": "(Server) Function: EquipPlayerWeaponSlot(player,weaponslot)"
    },
    "Server.GetPlayerEquippedWeapon": {
        "prefix": "GetPlayerEquippedWeapon",
        "body": "GetPlayerEquippedWeapon( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerEquippedWeapon(player)"
    },
    "Server.SetPlayerHeading": {
        "prefix": "SetPlayerHeading",
        "body": "SetPlayerHeading( ${1:player}, ${2:heading} )$0\r\n",
        "description": "(Server) Function: SetPlayerHeading(player,heading)"
    },
    "Server.GetPlayerHeading": {
        "prefix": "GetPlayerHeading",
        "body": "GetPlayerHeading( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerHeading(player)"
    },
    "Server.SetPlayerSpectate": {
        "prefix": "SetPlayerSpectate",
        "body": "SetPlayerSpectate( ${1:player}, ${2:bSpectate} )$0\r\n",
        "description": "(Server) Function: SetPlayerSpectate(player,bSpectate)"
    },
    "Server.ResetPlayerCamera": {
        "prefix": "ResetPlayerCamera",
        "body": "ResetPlayerCamera( ${1:player} )$0\r\n",
        "description": "(Server) Function: ResetPlayerCamera(player)"
    },
    "Server.IsPlayerDead": {
        "prefix": "IsPlayerDead",
        "body": "IsPlayerDead( ${1:player} )$0\r\n",
        "description": "(Server) Function: IsPlayerDead(player)"
    },
    "Server.SetPlayerHealth": {
        "prefix": "SetPlayerHealth",
        "body": "SetPlayerHealth( ${1:player}, ${2:health} )$0\r\n",
        "description": "(Server) Function: SetPlayerHealth(player,health)"
    },
    "Server.GetPlayerHealth": {
        "prefix": "GetPlayerHealth",
        "body": "GetPlayerHealth( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerHealth(player)"
    },
    "Server.SetPlayerArmor": {
        "prefix": "SetPlayerArmor",
        "body": "SetPlayerArmor( ${1:player}, ${2:armor} )$0\r\n",
        "description": "(Server) Function: SetPlayerArmor(player,armor)"
    },
    "Server.GetPlayerArmor": {
        "prefix": "GetPlayerArmor",
        "body": "GetPlayerArmor( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerArmor(player)"
    },
    "Server.SetPlayerRespawnTime": {
        "prefix": "SetPlayerRespawnTime",
        "body": "SetPlayerRespawnTime( ${1:player}, ${2:mstime} )$0\r\n",
        "description": "(Server) Function: SetPlayerRespawnTime(player,mstime)"
    },
    "Server.GetPlayerRespawnTime": {
        "prefix": "GetPlayerRespawnTime",
        "body": "GetPlayerRespawnTime( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerRespawnTime(player)"
    },
    "Server.SetPlayerModel": {
        "prefix": "SetPlayerModel",
        "body": "SetPlayerModel( ${1:player}, ${2:modelid} )$0\r\n",
        "description": "(Server) Function: SetPlayerModel(player,modelid)"
    },
    "Server.GetPlayerModel": {
        "prefix": "GetPlayerModel",
        "body": "GetPlayerModel( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerModel(player)"
    },
    "Server.GetPlayerIP": {
        "prefix": "GetPlayerIP",
        "body": "GetPlayerIP( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerIP(player)"
    },
    "Server.GetPlayerPing": {
        "prefix": "GetPlayerPing",
        "body": "GetPlayerPing( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerPing(player)"
    },
    "Server.KickPlayer": {
        "prefix": "KickPlayer",
        "body": "KickPlayer( ${1:player}, ${2:reason} )$0\r\n",
        "description": "(Server) Function: KickPlayer(player,reason)"
    },
    "Server.GetPlayerLocale": {
        "prefix": "GetPlayerLocale",
        "body": "GetPlayerLocale( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerLocale(player)"
    },
    "Server.GetPlayerGUID": {
        "prefix": "GetPlayerGUID",
        "body": "GetPlayerGUID( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerGUID(player)"
    },
    "Server.GetPlayerGameVersion": {
        "prefix": "GetPlayerGameVersion",
        "body": "GetPlayerGameVersion( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerGameVersion(player)"
    },
    "Server.SetPlayerAnimation": {
        "prefix": "SetPlayerAnimation",
        "body": "SetPlayerAnimation( ${1:player}, ${2:animation} )$0\r\n",
        "description": "(Server) Function: SetPlayerAnimation(player,animation)"
    },
    "Server.AttachPlayerParachute": {
        "prefix": "AttachPlayerParachute",
        "body": "AttachPlayerParachute( ${1:player}, ${2:bAttach} )$0\r\n",
        "description": "(Server) Function: AttachPlayerParachute(player,bAttach)"
    },
    "Server.SetPlayerHeadSize": {
        "prefix": "SetPlayerHeadSize",
        "body": "SetPlayerHeadSize( ${1:player}, ${2:size} )$0\r\n",
        "description": "(Server) Function: SetPlayerHeadSize(player,size)"
    },
    "Server.GetPlayerHeadSize": {
        "prefix": "GetPlayerHeadSize",
        "body": "GetPlayerHeadSize( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerHeadSize(player)"
    },
    "Server.GetText3DCount": {
        "prefix": "GetText3DCount",
        "body": "GetText3DCount()$0\r\n",
        "description": "(Server) Function: GetText3DCount()"
    },
    "Server.GetAllText3D": {
        "prefix": "GetAllText3D",
        "body": "GetAllText3D()$0\r\n",
        "description": "(Server) Function: GetAllText3D()"
    },
    "Server.CreateText3D": {
        "prefix": "CreateText3D",
        "body": "CreateText3D( ${1:text}, ${2:size}, ${3:x}, ${4:y}, ${5:z}, ${6:rx}, ${7:ry}, ${8:rz} )$0\r\n",
        "description": "(Server) Function: CreateText3D(text,size,x,y,z,rx,ry,rz)"
    },
    "Server.DestroyText3D": {
        "prefix": "DestroyText3D",
        "body": "DestroyText3D( ${1:text3d} )$0\r\n",
        "description": "(Server) Function: DestroyText3D(text3d)"
    },
    "Server.IsValidText3D": {
        "prefix": "IsValidText3D",
        "body": "IsValidText3D( ${1:text3d} )$0\r\n",
        "description": "(Server) Function: IsValidText3D(text3d)"
    },
    "Server.SetText3DAttached": {
        "prefix": "SetText3DAttached",
        "body": "SetText3DAttached( ${1:object}, ${2:attachtype}, ${3:attachid}, ${4:x}, ${5:y}, ${6:z }, ${7:rx (optional)}, ${8:ry (optional)}, ${9:rz (optional)}, ${10:SocketName (optional)} )$0\r\n",
        "description": "(Server) Function: SetText3DAttached(object,attachtype,attachid,x,y,z ,rx (optional),ry (optional),rz (optional),SocketName (optional))"
    },
    "Server.GetTimerCount": {
        "prefix": "GetTimerCount",
        "body": "GetTimerCount()$0\r\n",
        "description": "(Server) Function: GetTimerCount()"
    },
    "Server.GetAllTimers": {
        "prefix": "GetAllTimers",
        "body": "GetAllTimers()$0\r\n",
        "description": "(Server) Function: GetAllTimers()"
    },
    "Server.IsValidTimer": {
        "prefix": "IsValidTimer",
        "body": "IsValidTimer( ${1:timer} )$0\r\n",
        "description": "(Server) Function: IsValidTimer(timer)"
    },
    "Server.CreateTimer": {
        "prefix": "CreateTimer",
        "body": "CreateTimer( ${1:LuaFunction}, ${2:Interval }, ${3:UserArgs (optional)} )$0\r\n",
        "description": "(Server) Function: CreateTimer(LuaFunction,Interval ,UserArgs (optional))"
    },
    "Server.CreateCountTimer": {
        "prefix": "CreateCountTimer",
        "body": "CreateCountTimer( ${1:LuaFunction}, ${2:Interval}, ${3:Count}, ${4:UserArgs (optional)} )$0\r\n",
        "description": "(Server) Function: CreateCountTimer(LuaFunction,Interval,Count,UserArgs (optional))"
    },
    "Server.DestroyTimer": {
        "prefix": "DestroyTimer",
        "body": "DestroyTimer( ${1:timer} )$0\r\n",
        "description": "(Server) Function: DestroyTimer(timer)"
    },
    "Server.PauseTimer": {
        "prefix": "PauseTimer",
        "body": "PauseTimer( ${1:timer} )$0\r\n",
        "description": "(Server) Function: PauseTimer(timer)"
    },
    "Server.UnpauseTimer": {
        "prefix": "UnpauseTimer",
        "body": "UnpauseTimer( ${1:timer} )$0\r\n",
        "description": "(Server) Function: UnpauseTimer(timer)"
    },
    "Server.GetTimerRemainingTime": {
        "prefix": "GetTimerRemainingTime",
        "body": "GetTimerRemainingTime( ${1:timer} )$0\r\n",
        "description": "(Server) Function: GetTimerRemainingTime(timer)"
    },
    "Server.GetVehicleCount": {
        "prefix": "GetVehicleCount",
        "body": "GetVehicleCount()$0\r\n",
        "description": "(Server) Function: GetVehicleCount()"
    },
    "Server.GetAllVehicles": {
        "prefix": "GetAllVehicles",
        "body": "GetAllVehicles()$0\r\n",
        "description": "(Server) Function: GetAllVehicles()"
    },
    "Server.GetVehicleModel": {
        "prefix": "GetVehicleModel",
        "body": "GetVehicleModel( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleModel(vehicle)"
    },
    "Server.GetVehicleModelName": {
        "prefix": "GetVehicleModelName",
        "body": "GetVehicleModelName( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleModelName(vehicle)"
    },
    "Server.SetVehicleRespawnParams": {
        "prefix": "SetVehicleRespawnParams",
        "body": "SetVehicleRespawnParams( ${1:vehicle}, ${2:EnableRespawn }, ${3:RespawnTime}, ${4:RepairOnRespawn (optional)} )$0\r\n",
        "description": "(Server) Function: SetVehicleRespawnParams(vehicle,EnableRespawn ,RespawnTime,RepairOnRespawn (optional))"
    },
    "Server.IsVehicleStreamedIn": {
        "prefix": "IsVehicleStreamedIn",
        "body": "IsVehicleStreamedIn( ${1:player}, ${2:vehicle} )$0\r\n",
        "description": "(Server) Function: IsVehicleStreamedIn(player,vehicle)"
    },
    "Server.GetStreamedVehiclesForPlayer": {
        "prefix": "GetStreamedVehiclesForPlayer",
        "body": "GetStreamedVehiclesForPlayer( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetStreamedVehiclesForPlayer(player)"
    },
    "Server.SetVehicleLocation": {
        "prefix": "SetVehicleLocation",
        "body": "SetVehicleLocation( ${1:vehicle}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetVehicleLocation(vehicle,x,y,z)"
    },
    "Server.GetVehicleLocation": {
        "prefix": "GetVehicleLocation",
        "body": "GetVehicleLocation( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleLocation(vehicle)"
    },
    "Server.SetVehicleRotation": {
        "prefix": "SetVehicleRotation",
        "body": "SetVehicleRotation( ${1:vehicle}, ${2:x}, ${3:y}, ${4:z} )$0\r\n",
        "description": "(Server) Function: SetVehicleRotation(vehicle,x,y,z)"
    },
    "Server.GetVehicleRotation": {
        "prefix": "GetVehicleRotation",
        "body": "GetVehicleRotation( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleRotation(vehicle)"
    },
    "Server.SetVehicleHeading": {
        "prefix": "SetVehicleHeading",
        "body": "SetVehicleHeading( ${1:vehicle}, ${2:h} )$0\r\n",
        "description": "(Server) Function: SetVehicleHeading(vehicle,h)"
    },
    "Server.GetVehicleHeading": {
        "prefix": "GetVehicleHeading",
        "body": "GetVehicleHeading( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleHeading(vehicle)"
    },
    "Server.SetVehicleHealth": {
        "prefix": "SetVehicleHealth",
        "body": "SetVehicleHealth( ${1:vehicle}, ${2:health} )$0\r\n",
        "description": "(Server) Function: SetVehicleHealth(vehicle,health)"
    },
    "Server.GetVehicleHealth": {
        "prefix": "GetVehicleHealth",
        "body": "GetVehicleHealth( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleHealth(vehicle)"
    },
    "Server.SetVehicleLicensePlate": {
        "prefix": "SetVehicleLicensePlate",
        "body": "SetVehicleLicensePlate( ${1:vehicle}, ${2:text} )$0\r\n",
        "description": "(Server) Function: SetVehicleLicensePlate(vehicle,text)"
    },
    "Server.GetVehicleVelocity": {
        "prefix": "GetVehicleVelocity",
        "body": "GetVehicleVelocity( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleVelocity(vehicle)"
    },
    "Server.CreateVehicle": {
        "prefix": "CreateVehicle",
        "body": "CreateVehicle( ${1:modelid}, ${2:x, y, z}, ${3:heading (optional)} )$0\r\n",
        "description": "(Server) Function: CreateVehicle(modelid,x, y, z,heading (optional))"
    },
    "Server.DestroyVehicle": {
        "prefix": "DestroyVehicle",
        "body": "DestroyVehicle( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: DestroyVehicle(vehicle)"
    },
    "Server.IsValidVehicle": {
        "prefix": "IsValidVehicle",
        "body": "IsValidVehicle( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: IsValidVehicle(vehicle)"
    },
    "Server.GetVehicleDriver": {
        "prefix": "GetVehicleDriver",
        "body": "GetVehicleDriver( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleDriver(vehicle)"
    },
    "Server.GetVehiclePassenger": {
        "prefix": "GetVehiclePassenger",
        "body": "GetVehiclePassenger( ${1:vehicle}, ${2:seat} )$0\r\n",
        "description": "(Server) Function: GetVehiclePassenger(vehicle,seat)"
    },
    "Server.GetVehicleNumberOfSeats": {
        "prefix": "GetVehicleNumberOfSeats",
        "body": "GetVehicleNumberOfSeats( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleNumberOfSeats(vehicle)"
    },
    "Server.SetVehicleColor": {
        "prefix": "SetVehicleColor",
        "body": "SetVehicleColor( ${1:vehicle}, ${2:HexColor} )$0\r\n",
        "description": "(Server) Function: SetVehicleColor(vehicle,HexColor)"
    },
    "Server.GetVehicleColor": {
        "prefix": "GetVehicleColor",
        "body": "GetVehicleColor( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleColor(vehicle)"
    },
    "Server.SetVehicleLinearVelocity": {
        "prefix": "SetVehicleLinearVelocity",
        "body": "SetVehicleLinearVelocity( ${1:vehicle}, ${2:x}, ${3:y}, ${4:z }, ${5:reset (optional)} )$0\r\n",
        "description": "(Server) Function: SetVehicleLinearVelocity(vehicle,x,y,z ,reset (optional))"
    },
    "Server.SetVehicleAngularVelocity": {
        "prefix": "SetVehicleAngularVelocity",
        "body": "SetVehicleAngularVelocity( ${1:vehicle}, ${2:x}, ${3:y}, ${4:z }, ${5:reset (optional)} )$0\r\n",
        "description": "(Server) Function: SetVehicleAngularVelocity(vehicle,x,y,z ,reset (optional))"
    },
    "Server.GetVehicleGear": {
        "prefix": "GetVehicleGear",
        "body": "GetVehicleGear( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleGear(vehicle)"
    },
    "Server.SetVehicleHoodRatio": {
        "prefix": "SetVehicleHoodRatio",
        "body": "SetVehicleHoodRatio( ${1:vehicle}, ${2:openRatio} )$0\r\n",
        "description": "(Server) Function: SetVehicleHoodRatio(vehicle,openRatio)"
    },
    "Server.GetVehicleHoodRatio": {
        "prefix": "GetVehicleHoodRatio",
        "body": "GetVehicleHoodRatio( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleHoodRatio(vehicle)"
    },
    "Server.SetVehicleTrunkRatio": {
        "prefix": "SetVehicleTrunkRatio",
        "body": "SetVehicleTrunkRatio( ${1:vehicle}, ${2:openRatio} )$0\r\n",
        "description": "(Server) Function: SetVehicleTrunkRatio(vehicle,openRatio)"
    },
    "Server.GetVehicleTrunkRatio": {
        "prefix": "GetVehicleTrunkRatio",
        "body": "GetVehicleTrunkRatio( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleTrunkRatio(vehicle)"
    },
    "Server.StartVehicleEngine": {
        "prefix": "StartVehicleEngine",
        "body": "StartVehicleEngine( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: StartVehicleEngine(vehicle)"
    },
    "Server.StopVehicleEngine": {
        "prefix": "StopVehicleEngine",
        "body": "StopVehicleEngine( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: StopVehicleEngine(vehicle)"
    },
    "Server.GetVehicleEngineState": {
        "prefix": "GetVehicleEngineState",
        "body": "GetVehicleEngineState( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleEngineState(vehicle)"
    },
    "Server.SetVehicleLightEnabled": {
        "prefix": "SetVehicleLightEnabled",
        "body": "SetVehicleLightEnabled( ${1:vehicle}, ${2:enabled} )$0\r\n",
        "description": "(Server) Function: SetVehicleLightEnabled(vehicle,enabled)"
    },
    "Server.GetVehicleLightState": {
        "prefix": "GetVehicleLightState",
        "body": "GetVehicleLightState( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleLightState(vehicle)"
    },
    "Server.GetVehicleLightColor": {
        "prefix": "GetVehicleLightColor",
        "body": "GetVehicleLightColor( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleLightColor(vehicle)"
    },
    "Server.SetVehicleDamage": {
        "prefix": "SetVehicleDamage",
        "body": "SetVehicleDamage( ${1:vehicle}, ${2:damageIndex}, ${3:damage} )$0\r\n",
        "description": "(Server) Function: SetVehicleDamage(vehicle,damageIndex,damage)"
    },
    "Server.GetVehicleDamage": {
        "prefix": "GetVehicleDamage",
        "body": "GetVehicleDamage( ${1:vehicle}, ${2:damageIndex} )$0\r\n",
        "description": "(Server) Function: GetVehicleDamage(vehicle,damageIndex)"
    },
    "Server.AttachVehicleNitro": {
        "prefix": "AttachVehicleNitro",
        "body": "AttachVehicleNitro( ${1:vehicle }, ${2:attach (optional)} )$0\r\n",
        "description": "(Server) Function: AttachVehicleNitro(vehicle ,attach (optional))"
    },
    "Server.SetPlayerDimension": {
        "prefix": "SetPlayerDimension",
        "body": "SetPlayerDimension( ${1:player}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetPlayerDimension(player,dimension)"
    },
    "Server.SetVehicleDimension": {
        "prefix": "SetVehicleDimension",
        "body": "SetVehicleDimension( ${1:vehicle}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetVehicleDimension(vehicle,dimension)"
    },
    "Server.SetObjectDimension": {
        "prefix": "SetObjectDimension",
        "body": "SetObjectDimension( ${1:object}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetObjectDimension(object,dimension)"
    },
    "Server.SetLightDimension": {
        "prefix": "SetLightDimension",
        "body": "SetLightDimension( ${1:light}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetLightDimension(light,dimension)"
    },
    "Server.SetPickupDimension": {
        "prefix": "SetPickupDimension",
        "body": "SetPickupDimension( ${1:pickup}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetPickupDimension(pickup,dimension)"
    },
    "Server.SetText3DDimension": {
        "prefix": "SetText3DDimension",
        "body": "SetText3DDimension( ${1:text3d}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetText3DDimension(text3d,dimension)"
    },
    "Server.SetNPCDimension": {
        "prefix": "SetNPCDimension",
        "body": "SetNPCDimension( ${1:npc}, ${2:dimension} )$0\r\n",
        "description": "(Server) Function: SetNPCDimension(npc,dimension)"
    },
    "Server.GetPlayerDimension": {
        "prefix": "GetPlayerDimension",
        "body": "GetPlayerDimension( ${1:player} )$0\r\n",
        "description": "(Server) Function: GetPlayerDimension(player)"
    },
    "Server.GetVehicleDimension": {
        "prefix": "GetVehicleDimension",
        "body": "GetVehicleDimension( ${1:vehicle} )$0\r\n",
        "description": "(Server) Function: GetVehicleDimension(vehicle)"
    },
    "Server.GetObjectDimension": {
        "prefix": "GetObjectDimension",
        "body": "GetObjectDimension( ${1:object} )$0\r\n",
        "description": "(Server) Function: GetObjectDimension(object)"
    },
    "Server.GetLightDimension": {
        "prefix": "GetLightDimension",
        "body": "GetLightDimension( ${1:light} )$0\r\n",
        "description": "(Server) Function: GetLightDimension(light)"
    },
    "Server.GetPickupDimension": {
        "prefix": "GetPickupDimension",
        "body": "GetPickupDimension( ${1:pickup} )$0\r\n",
        "description": "(Server) Function: GetPickupDimension(pickup)"
    },
    "Server.GetText3DDimension": {
        "prefix": "GetText3DDimension",
        "body": "GetText3DDimension( ${1:text3d} )$0\r\n",
        "description": "(Server) Function: GetText3DDimension(text3d)"
    },
    "Server.GetNPCDimension": {
        "prefix": "GetNPCDimension",
        "body": "GetNPCDimension( ${1:npc} )$0\r\n",
        "description": "(Server) Function: GetNPCDimension(npc)"
    },
    "Server.SetPlayerPropertyValue": {
        "prefix": "SetPlayerPropertyValue",
        "body": "SetPlayerPropertyValue( ${1:player}, ${2:PropertyName}, ${3:Value}, ${4:bSync (optional)} )$0\r\n",
        "description": "(Server) Function: SetPlayerPropertyValue(player,PropertyName,Value,bSync (optional))"
    },
    "Server.GetPlayerPropertyValue": {
        "prefix": "GetPlayerPropertyValue",
        "body": "GetPlayerPropertyValue( ${1:player}, ${2:PropertyName} )$0\r\n",
        "description": "(Server) Function: GetPlayerPropertyValue(player,PropertyName)"
    },
    "Server.SetVehiclePropertyValue": {
        "prefix": "SetVehiclePropertyValue",
        "body": "SetVehiclePropertyValue( ${1:vehicle}, ${2:PropertyName}, ${3:Value}, ${4:bSync (optional)} )$0\r\n",
        "description": "(Server) Function: SetVehiclePropertyValue(vehicle,PropertyName,Value,bSync (optional))"
    },
    "Server.GetVehiclePropertyValue": {
        "prefix": "GetVehiclePropertyValue",
        "body": "GetVehiclePropertyValue( ${1:vehicle}, ${2:PropertyName} )$0\r\n",
        "description": "(Server) Function: GetVehiclePropertyValue(vehicle,PropertyName)"
    },
    "Server.SetObjectPropertyValue": {
        "prefix": "SetObjectPropertyValue",
        "body": "SetObjectPropertyValue( ${1:object}, ${2:PropertyName}, ${3:Value}, ${4:bSync (optional)} )$0\r\n",
        "description": "(Server) Function: SetObjectPropertyValue(object,PropertyName,Value,bSync (optional))"
    },
    "Server.GetObjectPropertyValue": {
        "prefix": "GetObjectPropertyValue",
        "body": "GetObjectPropertyValue( ${1:object}, ${2:PropertyName} )$0\r\n",
        "description": "(Server) Function: GetObjectPropertyValue(object,PropertyName)"
    },
    "Server.SetNPCPropertyValue": {
        "prefix": "SetNPCPropertyValue",
        "body": "SetNPCPropertyValue( ${1:npc}, ${2:PropertyName}, ${3:Value}, ${4:bSync (optional)} )$0\r\n",
        "description": "(Server) Function: SetNPCPropertyValue(npc,PropertyName,Value,bSync (optional))"
    },
    "Server.GetNPCPropertyValue": {
        "prefix": "GetNPCPropertyValue",
        "body": "GetNPCPropertyValue( ${1:npc}, ${2:PropertyName} )$0\r\n",
        "description": "(Server) Function: GetNPCPropertyValue(npc,PropertyName)"
    },
    "Server.SetText3DPropertyValue": {
        "prefix": "SetText3DPropertyValue",
        "body": "SetText3DPropertyValue( ${1:text3d}, ${2:PropertyName}, ${3:Value}, ${4:bSync (optional)} )$0\r\n",
        "description": "(Server) Function: SetText3DPropertyValue(text3d,PropertyName,Value,bSync (optional))"
    },
    "Server.GetText3DPropertyValue": {
        "prefix": "GetText3DPropertyValue",
        "body": "GetText3DPropertyValue( ${1:text3d}, ${2:PropertyName} )$0\r\n",
        "description": "(Server) Function: GetText3DPropertyValue(text3d,PropertyName)"
    },
    "Server.SetPickupPropertyValue": {
        "prefix": "SetPickupPropertyValue",
        "body": "SetPickupPropertyValue( ${1:pickup}, ${2:PropertyName}, ${3:Value}, ${4:bSync (optional)} )$0\r\n",
        "description": "(Server) Function: SetPickupPropertyValue(pickup,PropertyName,Value,bSync (optional))"
    },
    "Server.GetPickupPropertyValue": {
        "prefix": "GetPickupPropertyValue",
        "body": "GetPickupPropertyValue( ${1:pickup}, ${2:PropertyName} )$0\r\n",
        "description": "(Server) Function: GetPickupPropertyValue(pickup,PropertyName)"
    },
    "Server.Delay": {
        "prefix": "Delay",
        "body": "Delay( ${1:Milliseconds}, ${2:LuaFunction}, ${3:UserArgs (optional) (optional)} )$0\r\n",
        "description": "(Server) Function: Delay(Milliseconds,LuaFunction,UserArgs (optional) (optional))"
    }
}
